package require cmdline


proc gen_vhdl { filename binfile } {
	set file [open $filename w]
	set date [clock format [clock seconds] -format { %a, %Y-%m-%d, %H:%M }]
	set script [info script]
set fp [open $binfile r]

fconfigure $fp -translation binary
set bindata [read $fp]
close $fp

	puts $file "library ieee;"
	puts $file "use ieee.std_logic_1164.all;"
	puts $file ""
	puts $file "    -- VHDL representation of $binfile"
	puts $file "    -- generated by $script on $date"
	puts $file "    -- m68k executable as preloaded RAM contents"
	puts $file ""
	puts $file "package m68k_rom is"
	puts $file "    subtype ubyte is std_logic_vector(7 downto 0);"
	puts $file "    type ubyte_array is array (natural range <>) of ubyte;"
	puts $file ""
	puts $file "    constant m68k_binary    : ubyte_array :="
	puts $file "    ("
	puts -nonewline $file "        "
	set len [string length $bindata]
	for {set i 0} {$i < $len} {incr i} {
	    set char [string index $bindata $i]
	    binary scan $char H2 byte
	    puts -nonewline $file "x\""
	    puts -nonewline $file $byte
	    puts -nonewline $file "\""
	    if { ! ([expr $i + 1] == $len) } {
		puts -nonewline $file ", "
	    }
	    if { [expr ($i + 1) % 8] == 0 } {
		puts $file ""
		puts -nonewline $file "        "
	    }
	}
	puts $file ""
	puts $file "    );"
	puts $file "end package m68k_rom;"
	close $file
}

proc gen_mif { filename binfile } {
	set file [open $filename w]
	set date [clock format [clock seconds] -format { %a, %Y-%m-%d, %H:%M }]
	set script [info script]
set fp [open $binfile r]

fconfigure $fp -translation binary
set bindata [read $fp]
close $fp

	puts $file "-- .mif representation of $binfile"
	puts $file "-- generated by $script on $date"
	puts $file "-- m68k executable as Altera/Intel memory initialization file"
	puts $file "-- suitable for \"update memory initialization file\" action in quartus"
	puts $file ""

	set len [string length $bindata]
	puts $file "DEPTH = $len;               -- size of memory"
	puts $file "WIDTH = 8;                  -- size of data in bits"
	puts $file "ADDRESS_RADIX = HEX;        -- the radix of the address values"
	puts $file "DATA_RADIX = HEX;           -- the radix of the data values"
	puts $file "CONTENT"
	puts $file "BEGIN"

	for  {set i 0} {$i < $len} {incr i} {
		set char [string index $bindata $i]
		binary scan $char H2 byte
		puts -nonewline $file $i
		puts -nonewline $file " : "
		puts -nonewline $file $byte
		puts $file ";"
	}

	puts $file "END;"
	close $file
}



puts "embed_m68k.tcl"

exec /bin/bash -c "(cd m68k; make)"
set binfile m68k/simple.bin


set filename simple.vhd

gen_vhdl $filename $binfile
